# wsl - Windows Subsystem for Linux configuration

# There does not appear to be an official means of detecting whether or not
# the shell is executing in WSL 2. The following checks for the presence of
# $WSL_INTEROP; see: https://github.com/microsoft/WSL/issues/4555.
if [[ -z $WSL_INTEROP ]]; then
	return
fi

# Configure SSH and GnuPG agent forwarding;
# see: https://github.com/BlackReloaded/wsl2-ssh-pageant/blob/main/README.md
export SSH_AUTH_SOCK="$HOME/.ssh/agent.sock"
if ! ss -a | grep -q "$SSH_AUTH_SOCK"; then
	rm -f "$SSH_AUTH_SOCK"
	wsl2_ssh_pageant_bin="$HOME/.ssh/wsl2-ssh-pageant.exe"
	if test -x "$wsl2_ssh_pageant_bin"; then
		(setsid nohup socat UNIX-LISTEN:"$SSH_AUTH_SOCK,fork" EXEC:"$wsl2_ssh_pageant_bin" >/dev/null 2>&1 &)
	else
		echo >&2 "WARNING: $wsl2_ssh_pageant_bin is not executable."
	fi
	unset wsl2_ssh_pageant_bin
fi

export GPG_AGENT_SOCK="$HOME/.gnupg/S.gpg-agent"
if ! ss -a | grep -q "$GPG_AGENT_SOCK"; then
	rm -rf "$GPG_AGENT_SOCK"
	wsl2_ssh_pageant_bin="$HOME/.ssh/wsl2-ssh-pageant.exe"
	if test -x "$wsl2_ssh_pageant_bin"; then
		(setsid nohup socat UNIX-LISTEN:"$GPG_AGENT_SOCK,fork" EXEC:"$wsl2_ssh_pageant_bin --gpg S.gpg-agent" >/dev/null 2>&1 &)
	else
		echo >&2 "WARNING: $wsl2_ssh_pageant_bin is not executable."
	fi
	unset wsl2_ssh_pageant_bin
fi

# vim: ft=zsh
