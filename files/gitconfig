# gitconfig - git configuration

[alias]
	# Show changes for a given commit:
	diffcommit = "!git diff $1^!"

	# Generate a diffstat for a given commit:
	diffstat = "!git diff --stat $1^!"

	# Pull forced commits by fetching changes and resetting the
	# current local branch to match the remote;
	# see: https://stackoverflow.com/a/9813888
	forcepull = "!git fetch && git reset origin/$(git symbolic-ref --short -q HEAD) --hard"

	# Generate historical diffs in chronological order:
	history = "log --reverse --patch"

	# Delete local branches that have been merged to master:
	purge = "!git branch --merged master | grep -v ' master$' | xargs -n 1 git branch -d"

	# Delete all local branches:
	purgeall = "!git branch | grep -v ' master$' | xargs -n 1 git branch -D"

	# Amend commit changes (keeping previous message);
        # see: https://twitter.com/wardellbagby/status/1467837430107545601
	recommit = "!git commit --all --no-edit --amend"

	# Reset the previous commit (safe for use with branches);
	# see: http://megakemp.com/2016/08/25/git-undo/.
	undo = "!f() { git reset --soft $(git rev-parse --abbrev-ref HEAD)@{${1-1}}; }; f"

[color]
	ui = auto

[core]
	editor = vim

	# Look for exclude patterns under $HOME rather than the default.
	# This avoids having to track $HOME/.config.
	excludesFile = ~/.gitignore

[diff]
	tool = vimdiff

[difftool]
	prompt = false
	trustExitCode = true

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true

[merge]
	tool = vimdiff
	conflictstyle = diff3

[mergetool]
	prompt = false
	trustExitCode = true

[pull]
	ff = only

[push]
	default = current

[user]
	name = Steven Stallion
	email = sstallion@gmail.com

[github]
	user = sstallion

[include]
	# Include a third user-specific configuration file to overwrite
	# variables defined in the global configuration:
	path = ~/.gitconfig.local

# vim: ft=gitconfig
